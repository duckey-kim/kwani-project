<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kwani.mapper.UserMapper">

	<resultMap type="com.kwani.domain.UserVO" id="UserResult">
		<result property="email" column="EMAIL" />
		<result property="nick" column="NICK" />
		<result property="pwd" column="PWD" />
		<result property="userImg" column="USER_IMG" />
	</resultMap>

	<resultMap type="int" id="Integer"></resultMap>

	<insert id="insert">
		insert into t_user (email, nick, pwd, user_img,
		stus_cd, last_dt, in_user, in_date,
		up_user, up_date)
		values(#{email},
		#{nick}, #{pwd}, #{userImg},
		#{stusCd}, #{lastDt}, #{email}, sysdate,
		#{email},
		sysdate)
	</insert>

	<insert id="socialRegister">
		insert into t_user (email, nick, pwd, user_img,
		stus_cd, last_dt, in_user, in_date,
		up_user, up_date)
		values(#{email}, #{nick}, #{pwd}, #{userImg},
		#{stusCd},
		#{lastDt}, #{email}, sysdate, #{email},
		sysdate)
	</insert>

	<select id="get" resultMap="UserResult">
		select * from t_user where email =
		#{email}
	</select>

	<delete id="delete">
		delete from t_user where email = #{email}
	</delete>

	<update id="update">

		update t_user
		set email = #{email}, nick = #{nick},
		pwd = #{pwd}, user_img =
		#{userImg}, mood_cd = #{moodCd},
		genre_cd =
		#{genreCd}, situ_cd = #{situCd}, stus_cd = #{stusCd}, last_dt =
		#{lastDt},
		in_user = #{inUser}, in_date = #{inDate}, up_user =
		#{upUser}, up_date =
		#{upDate}
		where email = #{email}

	</update>

	<update id="setSysdate">
		update t_user
		set last_dt = sysdate
		where email =
		#{email}
	</update>

	<update id="setSysdateForSocial">
		update t_user
		set last_dt = sysdate
		where email =
		#{kakaoEmail}
	</update>


	<select id="checkUserInfo" resultMap="UserResult">
		select email, pwd,
		from
		t_user where email = #{email}
	</select>

	<update id="modifyUserInfo">
		update t_user
		set nick = #{nick}, pwd = #{pwd},
		user_img = #{userImg}
		where email = #{email}
	</update>

	<update id="withdrawal">
		update t_user
		set stus_cd = 2
		where email = #{email}
	</update>

	<select id="isUserIdVaild" resultType="Integer">
		select count(*) from
		t_user
		where email = #{email}
	</select>

	<select id="isSocialIdValid" resultType="Integer">
		select count(*) from
		t_user
		where email = #{kakaoEmail}
	</select>

	<select id="checkUserIdPwd" resultType="Integer">
		select count(*) from
		t_user
		where email = #{email} and pwd = #{pwd}
	</select>

	<select id="checkWithdrawUser" resultType="Integer">
		select stus_cd from
		t_user
		where email = #{IdEmail}
	</select>

	<update id="modifyPwd">
		update t_user
		set pwd = #{uuid}
		where email
		= #{IdEmail}
	</update>

	<select id="checkUserImg" resultType="Integer">
		select count(user_img) from
		t_user
		where email = #{email}
	</select>

	<select id="getUserImg" resultMap="UserResult">
		select user_img from t_user
		where email = #{email}
	</select>

</mapper>